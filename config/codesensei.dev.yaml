environment: DEVELOPMENT

#####################################################
# Redis                                             #
#####################################################
redis_host: redis
redis_port: 6379
redis_password: ""

#####################################################
# Database                                          #
#####################################################
postgres_host: localhost
postgres_port: 5432
postgres_db: codesensei
postgres_user: codesensei
postgres_password: ""

#####################################################
# Submission configuration                          #
#####################################################

# Default runtime limit for every program (in seconds). Decimal numbers are allowed.
# Time in which the OS assigns the processor to different tasks is not counted.
# Default: 5
cpu_time_limit:

# Maximum custom cpu_time_limit.
# Default: 15
max_cpu_time_limit:

# When a time limit is exceeded, wait for extra time (in seconds), before
# killing the program. This has the advantage that the real execution time
# is reported, even though it slightly exceeds the limit.
# Default: 1
cpu_extra_time:

# Maximum custom cpu_extra_time.
# Default: 5
max_cpu_extra_time:

# Limit wall-clock time in seconds. Decimal numbers are allowed.
# This clock measures the time from the start of the program to its exit,
# so it does not stop when the program has lost the CPU or when it is waiting
# for an external event. We recommend to use cpu_time_limit as the main limit,
# but set wall_time_limit to a much higher value as a precaution against
# sleeping programs.
# Default: 10
wall_time_limit:

# Maximum custom wall_time_limit.
# Default: 20
max_wall_time_limit:

# Limit address space of the program in kilobytes.
# Default: 128000
memory_limit:

# Maximum custom memory_limit.
# Default: 512000
max_memory_limit:

# Limit process stack in kilobytes.
# Default: 64000
stack_limit:

# Maximum custom stack_limit.
# Default: 128000
max_stack_limit:

# Maximum number of processes and/or threads program can create.
# Default: 60
max_processes_and_or_threads:

# Maximum custom max_processes_and_or_threads.
# Default: 120
max_max_processes_and_or_threads:

# If true then cpu_time_limit will be used as per process and thread.
# Default: false, i.e. cpu_time_limit is set as a total limit for all processes and threads.
enable_per_process_and_thread_time_limit:

# If false, user won't be able to set enable_per_process_and_thread_time_limit
# Default: true
allow_enable_per_process_and_thread_time_limit:

# If true then memory_limit will be used as per process and thread.
# Default: false, i.e. memory_limit is set as a total limit for all processes and threads.
enable_per_process_and_thread_memory_limit:

# If false, user won't be able to set enable_per_process_and_thread_memory_limit.
# Default: true
allow_enable_per_process_and_thread_memory_limit:

# Limit size of files created (or modified) by the program in kilobytes.
# Default: 1024
max_file_size:

# Maximum custom max_file_size.
# Default: 4096
max_max_file_size:

# Redirect stderr to stdout.
# Default: false
redirect_stderr_to_stdout:

# If false, user won't be able to set enable_network.
# Default: true, i.e. allow user to permit or deny network calls from the submission.
allow_enable_network:

# If true submission will by default be able to do network calls.
# Default: false, i.e. programs cannot do network calls.
enable_network:
